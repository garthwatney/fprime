/**
 * \file $(response).cpp
 * \author Auto-coded
 * \brief Implementation file for the $response response
 * This is generated by running the testcmd.sh script.
 *
 *
 * \copyright
 * Copyright 2009-2015, by the California Institute of Technology.
 * ALL RIGHTS RESERVED.  United States Government Sponsorship
 * acknowledged. Any commercial use must be negotiated with the Office
 * of Technology Transfer at the California Institute of Technology.
 * <br /><br />
 * This software may be subject to U.S. export control laws and
 * regulations.  By accepting this document, the user agrees to comply
 * with all U.S. export laws and regulations.  User has the
 * responsibility to obtain export licenses, or other export authority
 * as may be required before exporting such information to foreign
 * countries or providing access to foreign persons.
 */

\#include <Svc/FPManager/$(response).hpp>
\#include <Fw/Types/Assert.hpp>
\#include <Svc/FPManager/CommandSerializer.hpp>



namespace Svc {

using namespace CommandSerializer;


  $response::$(response)() :
          Response(),
          runCounter(0)

  {
  }

  $response::~$(response)() {

  }

  bool $response::run(Fw::ComBuffer& comBuffer) {

      Fw::SerializeStatus status = Fw::FW_SERIALIZE_OK;
      bool respRunning = false;
      
      
      #for cmd in $commandList:
        #if "CURRENT_TIME" in cmd:
      Fw::Time time;
      U16 days;
      U32 msecs;
      U16 usecs;
      // 8 bytes of time message specified in EX1PIE_MODE_CFG command
      U8 timeMsg[8];
          #break
        #end if
      #end for
     
      switch ( this->runCounter) {
      
      #set caseCounter = 0
      #for cmd in $commandList:
      #set rcmd = cmd
      
      case $caseCounter:
      
      #if "CURRENT_TIME" in cmd:
      
          #try:
              #set timeArg = cmd.split('(')[1].split(',')[0]
              #set delta = timeArg.split('+')[1]
          #except:
              #set delta = '0'
          #end try
      
          days = time.getDays();
          msecs = time.getMilliseconds() + $delta;
          usecs = time.getMicroseconds();

          // Load the time data little endian
          timeMsg[0] = (days & 0xFF00) >> 8;
          timeMsg[1] = (days & 0x00FF);
          timeMsg[2] = (msecs & 0xFF000000) >> 24;
          timeMsg[3] = (msecs & 0x00FF0000) >> 16;
          timeMsg[4] = (msecs & 0x0000FF00) >> 8;
          timeMsg[5] = (msecs & 0x000000FF);
          timeMsg[6] = (usecs & 0xFF00) >> 8;
          timeMsg[7] = (usecs & 0x00FF);
          
          #set rcmd = cmd.replace($timeArg, "timeMsg[0], timeMsg[1], timeMsg[2], timeMsg[3], timeMsg[4], timeMsg[5], timeMsg[6], timeMsg[7]")
          
      #end if

          status = $rcmd;
          FW_ASSERT(status == Fw::FW_SERIALIZE_OK);
          this->runCounter++;
          respRunning = true;
          break;       
      #set $caseCounter = $caseCounter + 1
      #end for

      case $caseCounter:

          this->runCounter = 0;
          this->numberCompletes++;
          this->executing = false;
          
          respRunning =  false;
          break;

      default:
          FW_ASSERT(0);
      }
      
      return respRunning;

  }

}
